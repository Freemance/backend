// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  MANAGER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String   @unique
  username String   @unique
  password String
  active   Boolean  @default(false)
  role     Role     @default(USER)
  profile  Profile?
}

enum ProfileStatus {
  PENDING
  REVIEWING
  NEEDFIX
  APPROVED
  DISAPPROVED
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  slykUser      String
  firstName     String
  lastName      String
  profileStatus ProfileStatus @default(PENDING)
  // Optional fileds
  avatar        String?
  jobTitle      String?
  bio           String?
  country       String?
  city          String?
  address       String?
  postalCode    String?
  placeOfBirth  String?
  dateOfBirth   DateTime?
  phone         String?

  // Relations fields
  user              User        @relation(fields: [userId], references: [id])
  userId            Int
  tag               Tag?        @relation(fields: [tagId], references: [id])
  tagId             Int?
  skills            Skill[]
  socialLinks       SocialLink?
  employmentHistory Job[]
  courses           Course[]
  portfolioItem     Portfolio[]
  languages         Language[]
  multimediaId      Int?
}

model Multimedia {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy Int
  filename  String   @unique
  path      String?
  size      String?
  type      String?
  extension String?
  status    Boolean  @default(true)
}

model Tag {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    @unique
  profiles  Profile[]
}

model Skill {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  icon      String?

  profiles   Profile[]
  portfolios Portfolio[]
}

// relacion implicita vamos ahora

enum LVL {
  NOVICE
  BEGINER
  SKILLFULL
  EXPERIENCED
  EXPERT
}

model SocialLink {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  twitter    String?
  instagram  String?
  linkedin   String?
  facebook   String?
  telegram   String?
  whatsapp   String?
  googlePlus String?
  slack      String?
  github     String?
  youtube    String?
  behance    String?
  dribbble   String?

  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}

model Job {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  company     String?
  description String?
  startDate   DateTime
  endDate     DateTime?
  inProgress  Boolean   @default(false)

  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}

model Course {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  course      String
  institution String
  description String?
  startDate   DateTime
  endDate     DateTime

  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}

model Portfolio {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  proyect     String?
  link        String?
  description String?
  screenshts  String[]
  startDate   DateTime?
  endDate     DateTime?

  skills    Skill[]
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}

enum LANLVL {
  NATIVE_SPEAKER
  HIGHLY_PROFICIENT
  VERY_GOOD_COMMAND
  GOOD_WORKING_KNOWLEDGE
  WORKING_KNOWLEDGE
  C1
  C2
  B1
  B2
  A1
  A2
}

model Language {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  language String
  lvl      LANLVL @default(NATIVE_SPEAKER)

  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}
